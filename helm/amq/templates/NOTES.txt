1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "amq.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "amq.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "amq.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "amq.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. AMQ has been deployed with {{ .Values.replicaCount }} replicas.

3. To connect your agents to AMQ, use the following service endpoint:
   - Internal: {{ include "amq.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}

4. Configuration:
   - Worker Pool Size: {{ .Values.config.workerPoolSize }}
   - Heartbeat Interval: {{ .Values.config.heartbeatInterval }}
   - Message Timeout: {{ .Values.config.messageTimeout }}
   {{- if .Values.persistence.enabled }}
   - Persistence: Enabled ({{ .Values.persistence.size }} per replica)
   {{- else }}
   - Persistence: Disabled (WARNING: Data will be lost on pod restart!)
   {{- end }}

5. Monitoring:
   {{- if .Values.monitoring.enabled }}
   - Metrics endpoint: http://{{ include "amq.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}/metrics
   {{- if .Values.monitoring.serviceMonitor.enabled }}
   - ServiceMonitor: Created for Prometheus Operator
   {{- end }}
   {{- else }}
   - Monitoring is disabled. Enable it in values.yaml to expose metrics.
   {{- end }}

6. To check the status of your AMQ deployment:
   kubectl get statefulset {{ include "amq.fullname" . }} -n {{ .Release.Namespace }}
   kubectl get pods -l "app.kubernetes.io/name={{ include "amq.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -n {{ .Release.Namespace }}

{{- if .Values.autoscaling.enabled }}
7. Autoscaling is enabled:
   - Min replicas: {{ .Values.autoscaling.minReplicas }}
   - Max replicas: {{ .Values.autoscaling.maxReplicas }}
   - Target CPU: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}%
   - Target Memory: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}%
{{- end }}

For more information, visit: https://github.com/rizome-dev/amq